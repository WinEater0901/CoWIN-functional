{"version":3,"sources":["components/appNav.js","commons/appNavbar.js","components/worldStats.js","components/indiaStats.js","Pages/Statistics.js","components/vaccineInfo.js","components/searchByDistrict.js","components/messageBox.js","components/dropdownSelect.js","components/dropdownSelectStates.js","components/showDistrictCode.js","Pages/Welcome.js","components/mobileNoCard.js","components/otpBox.js","components/refCard.js","components/alertBox.js","components/downloadCert.js","Pages/Certificate.js","App.js","reportWebVitals.js","index.js"],"names":["AppNav","Navbar","variant","className","style","backgroundColor","boxShadow","Brand","href","Nav","Link","Collapse","Text","target","AppNavbar","WorldStats","useState","global","setGlobal","numberWithCommas","x","toString","replace","useEffect","axios","get","then","res","globalData","data","Global","catch","err","console","log","confCases","All","confirmed","deaths","recovered","Card","Header","ListGroup","Item","Badge","IndiaStats","sites","setSites","registration","setRegistration","vaccination","setVaccination","statesData","setStatesData","accordionState","setAccordionState","resData","topBlock","getBeneficiariesGroupBy","Accordion","defaultActiveKey","height","maxHeight","overflowX","Toggle","as","eventKey","onClick","Body","Container","Row","Col","OverlayTrigger","placement","overlay","Tooltip","id","opacity","Button","total","govt","pvt","cit_18_45","cit_45_above","today","total_doses","tot_dose_1","tot_dose_2","covaxin","covishield","sputnik","today_dose_one","today_dose_two","today_female","today_male","today_others","Table","bordered","hover","map","stateData","state_name","partial_vaccinated","totally_vaccinated","Statistics","xs","lg","VaccineInfo","props","dtArr","available_capacity","vaccine","min_age_limit","pill","available_capacity_dose1","available_capacity_dose2","SearchByDistrict","distId","centers","setCenters","distIdParam","JSON","stringify","dateArr","i","dt","moment","add","push","String","format","striped","whiteSpace","position","top","center","sessions","some","sess","name","fee_type","address","dtArrs","filter","session","date","MessageBox","sm","Alert","textAlign","DropdownSelect","Dropdown","pre-scrollable","drop","distName","Menu","districts","district","distClickHandler","district_name","DropdownSelectStates","color","stateName","states","state","stateClickHandler","ShowDistrictCode","setDistricts","setDistID","setDistName","setStates","stateId","setStateID","setStateName","callDistSetter","state_id","district_id","Welcome","MobileNoCard","InputGroup","Prepend","FormControl","placeholder","mobileNo","aria-label","onChange","e","mobileNoChangeHandler","Append","sendOtpHandler","OtpBox","sentOtp","otpChangeHandler","confirmOtpHandler","RefCard","referenceId","refIdChangeHandler","certDownloadHandler","AlertBox","alertCode","DownloadCert","setMobileNo","otpTxnId","setOtpTxnId","setSentOtp","otpToken","setOtpToken","setAlertCode","setReferenceId","crypto","require","generateOTPReqBody","mobile","confirmOTPReqBody","otp","createHash","update","digest","txnId","config","headers","Authorization","responseType","value","length","post","token","file","Blob","type","fileURL","URL","createObjectURL","link","document","createElement","download","click","Certificate","App","backgroundImage","backgroundPosition","backgroundSize","width","backgroundRepeat","marginTop","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.70538081.chunk.js","sourcesContent":["import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nconst AppNav = () => {\n  return (\n    <>\n      <Navbar variant=\"dark\" className=\"ml-0 mr-12\" style={{backgroundColor:\"#10032a\", boxShadow: \"2px 3px 5px #888888\"}}>\n        <Navbar.Brand href=\"/\" className=\"ml-5 zoomeffect\">CoWIN </Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link className=\"zoomeffect\" href=\"/\">Availability</Nav.Link>\n          <Nav.Link className=\"zoomeffect\" href=\"/statistics\">Statistics</Nav.Link>\n          <Nav.Link className=\"zoomeffect\" href=\"/certificate\">Certificate</Nav.Link>\n        </Nav>\n        <Navbar.Collapse className=\"justify-content-end mr-5\">\n          <Navbar.Text className=\"zoomeffect\">\n          Please visit <a href=\"https://www.cowin.gov.in/home\" target=\"_blank\"> CoWIN </a> for all services.\n          </Navbar.Text>\n        </Navbar.Collapse>\n      </Navbar>\n    </>\n  );\n};\n\nexport default AppNav;\n","import React from \"react\";\nimport AppNav from \"../components/appNav\";\n\nconst AppNavbar = () => {\n  return (\n    <>\n      <AppNav />\n    </>\n  );\n};\n\nexport default AppNavbar;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Card, ListGroup, Badge } from \"react-bootstrap\";\n\nconst WorldStats = () => {\n  const [global, setGlobal] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(`https://covid-api.mmediagroup.fr/v1/cases`)\n      .then((res) => {\n        let globalData = res.data.Global;\n        setGlobal(globalData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [setGlobal]);\n\n  function numberWithCommas(x) {\n    return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  const confCases = numberWithCommas(global.All?.confirmed);\n  const deaths = numberWithCommas(global.All?.deaths);\n  const recovered = numberWithCommas(global.All?.recovered);\n\n  return (\n    <>\n      <Card className=\"mt-5 slideinanimation zoomeffect\" style={{boxShadow: \"2px 3px 5px #888888\"}}>\n        <Card.Header>\n          <b>WORLD</b>\n        </Card.Header>\n        <ListGroup variant=\"flush\">\n          <ListGroup.Item><Badge variant=\"secondary\">Confirmed Cases</Badge><Badge variant=\"light\"> {confCases}</Badge></ListGroup.Item>\n          <ListGroup.Item><Badge variant=\"danger\">Deaths</Badge><Badge variant=\"light\"> {deaths}</Badge></ListGroup.Item>\n          <ListGroup.Item><Badge variant=\"success\">Recovered</Badge><Badge variant=\"light\"> {recovered}</Badge></ListGroup.Item>\n        </ListGroup>\n      </Card>\n    </>\n  );\n};\n\nexport default WorldStats;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  RiArrowUpSLine,\n  RiArrowDownSLine,\n  RiInformationLine,\n} from \"react-icons/ri\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  ListGroup,\n  Accordion,\n  Table,\n  OverlayTrigger,\n  Tooltip,\n  Button,\n  Badge,\n} from \"react-bootstrap\";\n\nconst IndiaStats = () => {\n  const [sites, setSites] = useState([]);\n  const [registration, setRegistration] = useState([]);\n  const [vaccination, setVaccination] = useState([]);\n  const [statesData, setStatesData] = useState([]);\n  const [accordionState, setAccordionState] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://cdn-api.co-vin.in/api/v1/reports/v2/getPublicReports?state_id=&district_id=&date=`\n      )\n      .then((res) => {\n        let resData = res.data;\n        setSites(resData.topBlock.sites);\n        setRegistration(resData.topBlock.registration);\n        setVaccination(resData.topBlock.vaccination);\n        setStatesData(resData.getBeneficiariesGroupBy);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  function numberWithCommas(x) {\n    return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  return (\n    <>\n      <Accordion defaultActiveKey=\"0\" className=\"slideinanimation\">\n        <Card\n          className=\"ml-5 mr-5 mt-5\"\n          style={{ boxShadow: \"2px 3px 5px #888888\" }}\n        >\n          <div\n            className=\"scrollbarstyle style-2\"\n            style={{ height: \"auto\", maxHeight: \"650px\", overflowX: \"hidden\" }}\n          >\n            <Accordion.Toggle\n              as={Card.Header}\n              variant=\"link\"\n              eventKey=\"1\"\n              onClick={() => {\n                setAccordionState(!accordionState);\n              }}\n            >\n              <b>\n                INDIA{\" \"}\n                {accordionState ? <RiArrowUpSLine /> : <RiArrowDownSLine />}\n              </b>\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"1\">\n              <Card.Body>\n                <Container>\n                  <Row>\n                    <Col>\n                      <Accordion className=\"zoomeffect\" defaultActiveKey=\"0\">\n                        <Card style={{backgroundColor:\"skyblue\",boxShadow: \"2px 3px 5px #888888\" }}>\n                          <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                            Sites   \n                            <OverlayTrigger\n                              placement=\"right\"\n                              overlay={\n                                <Tooltip\n                                  id={`tooltip-right`}\n                                  style={{ opacity: \"0.6\" }}\n                                >\n                                  Total public and private health facilities\n                                  conducting vaccination today.\n                                </Tooltip>\n                              }\n                            >\n                              <Button className=\"pt-0\" variant=\"light\">\n                                <RiInformationLine />\n                              </Button>\n                            </OverlayTrigger>\n                          </Accordion.Toggle>\n                          <Accordion.Collapse eventKey=\"1\">\n                            <Card.Body>\n                              <ListGroup variant=\"flush\">\n                                <ListGroup.Item>\n                                  Total:{\" \"}\n                                  <Badge variant=\"light\">\n                                    {numberWithCommas(sites.total)}\n                                  </Badge>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                  Govt:{\" \"}\n                                  <Badge variant=\"light\">\n                                    {numberWithCommas(sites.govt)}\n                                  </Badge>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                  Pvt:{\" \"}\n                                  <Badge variant=\"light\">\n                                    {numberWithCommas(sites.pvt)}\n                                  </Badge>\n                                </ListGroup.Item>\n                              </ListGroup>\n                            </Card.Body>\n                          </Accordion.Collapse>\n                        </Card>\n                      </Accordion>\n                    </Col>\n                    <Col>\n                      <Accordion className=\"zoomeffect\" defaultActiveKey=\"0\">\n                        <Card style={{backgroundColor:\"skyblue\", boxShadow: \"2px 3px 5px #888888\" }}>\n                          <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                            Registrations\n                            <OverlayTrigger\n                              placement=\"right\"\n                              overlay={\n                                <Tooltip\n                                  id={`tooltip-right`}\n                                  style={{ opacity: \"0.6\" }}\n                                >\n                                  Total number of beneficiaries registered till\n                                  date.\n                                </Tooltip>\n                              }\n                            >\n                              <Button className=\"pt-0\" variant=\"light\">\n                                <RiInformationLine />\n                              </Button>\n                            </OverlayTrigger>\n                          </Accordion.Toggle>\n                          <Accordion.Collapse eventKey=\"1\">\n                            <Card.Body>\n                              <ListGroup variant=\"flush\">\n                                <ListGroup.Item>\n                                  Age 18+:\n                                  <Badge variant=\"light\">\n                                    {numberWithCommas(registration.cit_18_45)}\n                                  </Badge>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                  Age 45+:\n                                  <Badge variant=\"light\">\n                                    {numberWithCommas(\n                                      registration.cit_45_above\n                                    )}\n                                  </Badge>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                  Today:{\" \"}\n                                  <Badge variant=\"light\">\n                                    {numberWithCommas(registration.today)}\n                                  </Badge>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                  Total:{\" \"}\n                                  <Badge variant=\"light\">\n                                    {numberWithCommas(registration.total)}\n                                  </Badge>\n                                </ListGroup.Item>\n                              </ListGroup>\n                            </Card.Body>\n                          </Accordion.Collapse>\n                        </Card>\n                      </Accordion>\n                    </Col>\n                    <Col>\n                      <Accordion className=\"zoomeffect\" defaultActiveKey=\"0\">\n                        <Card style={{backgroundColor:\"skyblue\", boxShadow: \"2px 3px 5px #888888\" }}>\n                          <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                            Doses\n                            <OverlayTrigger\n                              placement=\"right\"\n                              overlay={\n                                <Tooltip\n                                  id={`tooltip-right`}\n                                  style={{ opacity: \"0.6\" }}\n                                >\n                                  Total number of vaccine doses till date.\n                                </Tooltip>\n                              }\n                            >\n                              <Button className=\"pt-0\" variant=\"light\">\n                                <RiInformationLine />\n                              </Button>\n                            </OverlayTrigger>\n                          </Accordion.Toggle>\n                          <Accordion.Collapse eventKey=\"1\">\n                            <Card.Body>\n                              <ListGroup variant=\"flush\">\n                                <ListGroup.Item>\n                                  Total:\n                                  <Badge variant=\"light\">{numberWithCommas(vaccination.total_doses)}</Badge>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                  Dose1:\n                                  <Badge variant=\"light\">{numberWithCommas(vaccination.tot_dose_1)}</Badge>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                  Dose2:\n                                  <Badge variant=\"light\">{numberWithCommas(vaccination.tot_dose_2)}</Badge>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                  Today: <Badge variant=\"light\">{numberWithCommas(vaccination.today)}</Badge>\n                                </ListGroup.Item>\n                              </ListGroup>\n                            </Card.Body>\n                          </Accordion.Collapse>\n                        </Card>\n                      </Accordion>\n                    </Col>\n                  </Row>\n                  <Row className=\"mt-4\">\n                    <Col>\n                      <Accordion className=\"zoomeffect\" defaultActiveKey=\"0\">\n                        <Card style={{backgroundColor:\"skyblue\", boxShadow: \"2px 3px 5px #888888\" }}>\n                          <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                            Vaccine Types\n                            <OverlayTrigger\n                              placement=\"right\"\n                              overlay={\n                                <Tooltip\n                                  id={`tooltip-right`}\n                                  style={{ opacity: \"0.6\" }}\n                                >\n                                  No. of doses of each type of vaccines\n                                  administered till date.\n                                </Tooltip>\n                              }\n                            >\n                              <Button className=\"pt-0\" variant=\"light\">\n                                <RiInformationLine />\n                              </Button>\n                            </OverlayTrigger>\n                          </Accordion.Toggle>\n                          <Accordion.Collapse eventKey=\"1\">\n                            <Card.Body>\n                              <ListGroup variant=\"flush\">\n                                <ListGroup.Item>\n                                  Covaxin:\n                                  <Badge variant=\"light\">{numberWithCommas(vaccination.covaxin)}</Badge>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                  Covishield:\n                                  <Badge variant=\"light\">{numberWithCommas(vaccination.covishield)}</Badge>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                  Sputnik:\n                                  <Badge variant=\"light\">{numberWithCommas(vaccination.sputnik)}</Badge>\n                                </ListGroup.Item>\n                              </ListGroup>\n                            </Card.Body>\n                          </Accordion.Collapse>\n                        </Card>\n                      </Accordion>\n                    </Col>\n                    <Col>\n                      <Accordion className=\"zoomeffect\" defaultActiveKey=\"0\">\n                        <Card style={{backgroundColor:\"skyblue\", boxShadow: \"2px 3px 5px #888888\" }}>\n                          <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                            Today\n                            <OverlayTrigger\n                              placement=\"right\"\n                              overlay={\n                                <Tooltip\n                                  id={`tooltip-right`}\n                                  style={{ opacity: \"0.6\" }}\n                                >\n                                  No. of vaccines administered today.\n                                </Tooltip>\n                              }\n                            >\n                              <Button className=\"pt-0\" variant=\"light\">\n                                <RiInformationLine />\n                              </Button>\n                            </OverlayTrigger>\n                          </Accordion.Toggle>\n                          <Accordion.Collapse eventKey=\"1\">\n                            <Card.Body>\n                              <ListGroup variant=\"flush\">\n                                <ListGroup.Item>\n                                  Total: <Badge variant=\"light\">{numberWithCommas(vaccination.today)}</Badge>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                  Dose 1:\n                                  <Badge variant=\"light\">{numberWithCommas(vaccination.today_dose_one)}</Badge>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                  Dose 2:\n                                  <Badge variant=\"light\">{numberWithCommas(vaccination.today_dose_two)}</Badge>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                  Female:\n                                  <Badge variant=\"light\">{numberWithCommas(vaccination.today_female)}</Badge>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                  Male:\n                                  <Badge variant=\"light\">{numberWithCommas(vaccination.today_male)}</Badge>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                  Others:\n                                  <Badge variant=\"light\">{numberWithCommas(vaccination.today_others)}</Badge>\n                                </ListGroup.Item>\n                              </ListGroup>\n                            </Card.Body>\n                          </Accordion.Collapse>\n                        </Card>\n                      </Accordion>\n                    </Col>\n                    <Col></Col>\n                  </Row>\n                  <Row className=\"mt-4\">\n                    <Col>\n                      <Table\n                        bordered\n                        hover\n                        style={{ boxShadow: \"2px 3px 5px #888888\" }}\n                      >\n                        <thead style={{backgroundColor:\"skyblue\", boxShadow: \"2px 3px 5px #888888\" }}>\n                          <tr>\n                            <th>State</th>\n                            <th>Total Vaccinated</th>\n                            <th>Only 1 Dose</th>\n                            <th>Both Doses</th>\n                            <th>Today</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {statesData.map((stateData) => (\n                            <tr>\n                              <td>{stateData.state_name}</td>\n                              <td>\n                                <Badge variant=\"light\">\n                                  {numberWithCommas(stateData.total)}\n                                </Badge>\n                              </td>\n                              <td>\n                                <Badge variant=\"light\">\n                                  {numberWithCommas(\n                                    stateData.partial_vaccinated\n                                  )}\n                                </Badge>\n                              </td>\n                              <td>\n                                <Badge variant=\"light\">\n                                  {numberWithCommas(\n                                    stateData.totally_vaccinated\n                                  )}\n                                </Badge>\n                              </td>\n                              <td>\n                                <Badge variant=\"light\">\n                                  {numberWithCommas(stateData.today)}\n                                </Badge>\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </Table>\n                    </Col>\n                  </Row>\n                </Container>\n              </Card.Body>\n            </Accordion.Collapse>\n          </div>\n        </Card>\n      </Accordion>\n    </>\n  );\n};\n\nexport default IndiaStats;\n","import React from \"react\";\nimport WorldStats from \"../components/worldStats\";\nimport {\n  Container,\n  Row,\n  Col,\n} from \"react-bootstrap\";\nimport IndiaStats from \"../components/indiaStats\";\n\nconst Statistics = () => {\n  return (\n    <>\n      <Container>\n        <Row>\n          <Col xs lg=\"2\">\n            <WorldStats />\n          </Col>\n          <Col>\n            <IndiaStats />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default Statistics;\n","import React, { useState, useEffect } from 'react'\nimport { Badge } from 'react-bootstrap'\n\nconst VaccineInfo = (props) => {\n  return (\n    <>\n      {props.dtArr?.available_capacity ? (\n        props.dtArr?.vaccine === 'COVISHIELD' ? (\n          <Badge variant=\"success\">{props.dtArr?.vaccine}</Badge>\n        ) : props.dtArr?.vaccine === 'COVAXIN' ? (\n          <Badge variant=\"primary\">{props.dtArr?.vaccine}</Badge>\n        ) : (\n          <Badge variant=\"warning\">{props.dtArr?.vaccine}</Badge>\n        )\n      ) : (\n        ''\n      )}\n      &nbsp;\n      {props.dtArr?.available_capacity ? (\n        props.dtArr?.min_age_limit === 45 ? (\n          <Badge pill variant=\"info\">\n            {props.dtArr?.min_age_limit}+\n          </Badge>\n        ) : (\n          <Badge pill variant=\"danger\">\n            {props.dtArr?.min_age_limit}+\n          </Badge>\n        )\n      ) : (\n        ''\n      )}\n      <br />\n      {props.dtArr?.available_capacity ? (\n        <>\n          D1: <b>{props.dtArr?.available_capacity_dose1}</b> <br />\n          D2: <b>{props.dtArr?.available_capacity_dose2}</b>\n        </>\n      ) : (\n        ''\n      )}\n      <br />\n    </>\n  )\n}\n\nexport default VaccineInfo\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Table, Badge } from \"react-bootstrap\";\nimport VaccineInfo from \"./vaccineInfo\";\nimport moment from \"moment\";\nimport \"../styles/style.css\";\n\nconst SearchByDistrict = (distId) => {\n  const [centers, setCenters] = useState([]);\n\n  let distIdParam = JSON.stringify(distId.distId);\n\n  let dateArr = [];\n  for (let i = 0; i < 7; i++) {\n    let dt = moment().add(i, \"days\");\n    dateArr.push(String(dt.format(\"DD-MM-YYYY\")));\n  }\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict?district_id=${distIdParam}&date=${dateArr[0]}`\n      )\n      .then((res) => {\n        setCenters(res.data.centers);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [distIdParam]);\n\n  return (\n    <>\n      <div\n        className=\"mt-3 scrollbarstyle style-2\"\n        style={{ height: \"auto\", maxHeight: \"685px\", overflowX: \"auto\" }}\n      >\n        <Table striped bordered hover>\n          <thead style={{boxShadow: \"5px 5px 8px #888888\"}}>\n            <tr>\n              <th\n                style={{\n                  whiteSpace: \"nowrap\",\n                  position: \"sticky\",\n                  top: \"0\",\n                  backgroundColor: \"white\",\n                }}\n              >\n                Center\n              </th>\n              {dateArr.map((dt) => (\n                <th\n                  style={{\n                    whiteSpace: \"nowrap\",\n                    position: \"sticky\",\n                    top: \"0\",\n                    backgroundColor: \"white\",\n                  }}\n                >\n                  {dt}\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {centers.map((center) =>\n              center.sessions.some((sess) => sess.available_capacity) ? (\n                <tr style={{boxShadow: \"2px 3px 5px #888888\"}}>\n                  <td className=\"pb-0 pr-0\">\n                    <b>{center.name}&nbsp;</b>\n                    {center.fee_type === \"Paid\" ? (\n                      <Badge variant=\"danger\">{center.fee_type}</Badge>\n                    ) : (\n                      \"\"\n                    )}\n                    <br />\n                    <p className=\"mb-0\">{center.address}</p>\n                  </td>\n                  {dateArr.map((dt) => {\n                    const dtArrs = center.sessions.filter(\n                      (session) => session.date === dt\n                    );\n                    return (\n                      <td className=\"pb-0 pr-0\">\n                        {dtArrs.map((dtArr) => {\n                          return <VaccineInfo dtArr={dtArr} />;\n                        })}\n                      </td>\n                    );\n                  })}\n                </tr>\n              ) : (\n                \"\"\n              )\n            )}\n          </tbody>\n        </Table>\n      </div>\n    </>\n  );\n};\n\nexport default SearchByDistrict;","import React from \"react\";\nimport { Container, Row, Col, Alert } from \"react-bootstrap\";\nimport SearchByDistrict from \"./searchByDistrict\";\nimport \"../styles/style.css\"\n\nconst MessageBox = (props) => {\n\n  return (\n    <>\n      <Container className=\"pl-0\" className=\"slideinanimation\">\n        <Row>\n          <Col sm={12} className=\"ml-0 pl-0\">\n            {props.distId ? (\n              <SearchByDistrict distId={props.distId} />\n            ) : (\n              <Alert variant=\"success\" className=\"mt-3 zoomeffect\" style={{boxShadow: \"5px 5px 8px #888888\", textAlign: \"center\"}}>\n                Namaste India! select State and District here to check vaccine Availability&nbsp;or view the&nbsp;\n                <Alert.Link href=\"/statistics\">Covid Statistics</Alert.Link>.\n              </Alert>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default MessageBox;\n","import React from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport \"../styles/style.css\";\n\nconst DropdownSelect = (props) => {\n  return (\n    <>\n      <Dropdown\n        pre-scrollable\n        drop=\"right\"\n        style={{\n          whiteSpace: \"nowrap\",\n          position: \"sticky\",\n          top: \"20px\",\n          backgroundColor: \"transparent\",\n        }}\n        className=\"slideinanimation\"\n      >\n        <Dropdown.Toggle className=\"zoomeffect\" variant=\"outline-success\" id=\"dropdown-basic\" style={{boxShadow: \"5px 5px 8px #888888\"}}>\n          <b>{props.distName}</b>\n        </Dropdown.Toggle>\n        <Dropdown.Menu\n          className=\"scrollbarstyle style-2\"\n          style={{ height: \"auto\", maxHeight: \"645px\", overflowX: \"hidden\", boxShadow: \"5px 5px 8px #888888\" }}\n        >\n          {props.districts.map((district) => (\n            <Dropdown.Item className=\"zoomeffect\" onClick={() => props.distClickHandler(district)}>\n              {district.district_name}\n            </Dropdown.Item>\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n    </>\n  );\n};\n\nexport default DropdownSelect;\n","import React from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport \"../styles/style.css\";\n\nconst DropdownSelectStates = (props) => {\n  return (\n    <>\n      <Dropdown\n        pre-scrollable\n        drop=\"right\"\n        style={{\n          whiteSpace: \"nowrap\",\n          position: \"sticky\",\n          top: \"20px\",\n          backgroundColor: \"transparent\",\n        }}\n        className=\"slideinanimation mb-3\"\n      >\n        <Dropdown.Toggle  variant=\"outline-success\" id=\"dropdown-basic\" style={{color:\"white\",boxShadow: \"5px 5px 8px #888888\"}}>\n          <b>{props.stateName}</b>\n        </Dropdown.Toggle>\n        <Dropdown.Menu\n          className=\"scrollbarstyle style-2\"\n          style={{ height: \"auto\", maxHeight: \"645px\", overflowX: \"hidden\", boxShadow: \"5px 5px 8px #888888\" }}\n        >\n          {props.states.map((state) => (\n            <Dropdown.Item className=\"zoomeffect\" onClick={() => props.stateClickHandler(state)}>\n              {state.state_name}\n            </Dropdown.Item>\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n    </>\n  );\n};\n\nexport default DropdownSelectStates;\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport MessageBox from './messageBox'\nimport DropdownSelect from './dropdownSelect'\nimport DropdownSelectStates from './dropdownSelectStates'\n\nconst ShowDistrictCode = () => {\n  const [districts, setDistricts] = useState([])\n  const [distId, setDistID] = useState()\n  const [distName, setDistName] = useState('Select District')\n  const [states, setStates] = useState([])\n  const [stateId, setStateID] = useState()\n  const [stateName, setStateName] = useState('Select state')\n\n  useEffect(() => {\n    axios\n      .get(`https://cdn-api.co-vin.in/api/v2/admin/location/states`)\n      .then((res) => {\n        let statesData = res.data.states\n        setStates(statesData)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }, [])\n\n  const stateClickHandler = (state) => {\n    setStateID(state.state_id)\n    setStateName(state.state_name)  \n    if (state.state_id) {\n      callDistSetter(state.state_id)\n      setDistName('Select District')\n    }\n  }\n\n  const callDistSetter = (state_id) => {\n    axios\n      .get(\n        `https://cdn-api.co-vin.in/api/v2/admin/location/districts/${state_id}`,\n      )\n      .then((res) => {\n        setDistricts(res.data.districts)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  const distClickHandler = (district) => {\n    setDistID(district.district_id)\n    setDistName(district.district_name)\n  }\n\n  return (\n    <>\n      <Container className=\"pl-0 pr-0\">\n        <Row>\n          <Col sm={10} className=\"ml-0 pl-0 pr-0\">\n            <MessageBox distId={distId} />\n          </Col>\n          <Col sm={2} className=\"mt-4 ml-0\">\n            <DropdownSelectStates\n              stateClickHandler={stateClickHandler}\n              stateName={stateName}\n              states={states}\n            />\n            {stateId && (\n              <DropdownSelect\n                distClickHandler={distClickHandler}\n                distName={distName}\n                districts={districts}\n              />\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </>\n  )\n}\n\nexport default ShowDistrictCode\n","import React from \"react\";\nimport ShowDistrictCode from \"../components/showDistrictCode\";\n\nconst Welcome = () => {\n\n  return (\n    <>\n      <ShowDistrictCode />\n    </>\n  );\n};\n\nexport default Welcome;\n","import React from \"react\";\nimport { InputGroup, FormControl, Button } from \"react-bootstrap\";\n\nconst MobileNoCard = (props) => {\n  return (\n    <>\n      <div className=\"pt-4 zoomeffect\">\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Prepend>\n            <InputGroup.Text>+91</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            placeholder={props.mobileNo}\n            aria-label=\"Mobile No.\"\n            onChange={(e) => props.mobileNoChangeHandler(e)}\n          />\n          <InputGroup.Append>\n            <Button variant=\"outline-secondary\" onClick={props.sendOtpHandler} style={{backgroundColor:\"green\",color:\"white\",boxShadow: \"2px 3px 5px #888888\"}}>\n              Send OTP\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </div>\n    </>\n  );\n};\n\nexport default MobileNoCard;\n","import React from \"react\";\nimport { InputGroup, FormControl, Button } from \"react-bootstrap\";\n\nconst OtpBox = (props) => {\n  return (\n    <>\n      <div className=\"pt-4 zoomeffect\">\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Prepend></InputGroup.Prepend>\n          <FormControl\n            placeholder={props.sentOtp}\n            aria-label=\"otp\"\n            onChange={(e) => props.otpChangeHandler(e)}\n          />\n          <InputGroup.Append>\n            <Button\n              variant=\"outline-secondary\"\n              onClick={props.confirmOtpHandler}\n              style={{backgroundColor:\"green\",color:\"white\",boxShadow: \"2px 3px 5px #888888\"}}\n            >\n              Submit\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </div>\n    </>\n  );\n};\n\nexport default OtpBox;\n","import React from \"react\";\nimport { InputGroup, FormControl, Button, Alert } from \"react-bootstrap\";\n\nconst RefCard = (props) => {\n  return (\n    <>\n      <div className=\"pt-4 zoomeffect\">\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Prepend></InputGroup.Prepend>\n          <FormControl\n            placeholder={props.referenceId}\n            aria-label=\"otp\"\n            onChange={(e) => props.refIdChangeHandler(e)}\n          />\n          <InputGroup.Append>\n            <Button\n              variant=\"outline-secondary\"\n              onClick={props.certDownloadHandler}\n              style={{backgroundColor:\"green\",color:\"white\",boxShadow: \"2px 3px 5px #888888\"}}\n            >\n              Download\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </div>\n    </>\n  );\n};\n\nexport default RefCard;\n","import React, { useState } from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst AlertBox = (props) => {\n  return (\n    <div className=\"slideinanimation\" style={{boxShadow: \"2px 3px 5px #888888\"}}>\n      {props.alertCode === \"1\" ? (\n        <Alert variant=\"success\">\n          OTP sent to <i>{props.mobileNo}</i>. Valid for 3 minutes.\n        </Alert>\n      ) : props.alertCode === \"2\" ? (\n        <Alert variant=\"success\">OTP validated successfully.</Alert>\n      ) : props.alertCode === \"3\" ? (\n        <Alert variant=\"success\">Certificate downloaded successfully.</Alert>\n      ) : props.alertCode === \"4\" ? (\n        <Alert variant=\"danger\">\n          OTP could not be sent. Please verify mobile no.\n        </Alert>\n      ) : props.alertCode === \"5\" ? (\n        <Alert variant=\"danger\">OTP invalid or mobile no not registered.</Alert>\n      ) : props.alertCode === \"6\" ? (\n        <Alert variant=\"danger\">\n          Sorry! Certificate could not be downloaded.\n        </Alert>\n      ) : props.alertCode === \"7\" ? (\n        <Alert variant=\"danger\">\n          Invalid mobile no.\n        </Alert>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default AlertBox;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport MobileNoCard from \"./mobileNoCard\";\nimport OtpBox from \"./otpBox\";\nimport { Card, OverlayTrigger, Tooltip, Button } from \"react-bootstrap\";\nimport { RiInformationLine } from \"react-icons/ri\";\nimport RefCard from \"./refCard\";\nimport AlertBox from \"./alertBox\";\n\nconst DownloadCert = () => {\n  const [mobileNo, setMobileNo] = useState(\"Registered Mobile No.\");\n  const [otpTxnId, setOtpTxnId] = useState(\"\");\n  const [sentOtp, setSentOtp] = useState(\"Please enter the OTP\");\n  const [otpToken, setOtpToken] = useState(\"\");\n  const [alertCode, setAlertCode] = useState(\"\");\n  const [referenceId, setReferenceId] = useState(\"Please enter reference ID\");\n\n  var crypto = require(\"crypto\");\n\n  const mobileNoChangeHandler = (e) => {\n    setMobileNo(String(e.target.value));\n  };\n\n  let generateOTPReqBody = {\n    mobile: mobileNo,\n  };\n\n  const sendOtpHandler = () => {\n    if (mobileNo.length === 10) {\n      axios\n        .post(\n          \"https://cdn-api.co-vin.in/api/v2/auth/public/generateOTP\",\n          generateOTPReqBody\n        )\n        .then((res) => {\n          setOtpTxnId(String(res.data.txnId));\n          setAlertCode(\"1\");\n        })\n        .catch((err) => {\n          console.log(err);\n          setAlertCode(\"4\");\n        });\n    } else {\n      setAlertCode(\"7\");\n    }\n  };\n\n  const otpChangeHandler = (e) => {\n    setSentOtp(String(e.target.value));\n  };\n\n  var otpSha256 = crypto.createHash(\"sha256\").update(sentOtp).digest(\"hex\");\n\n  let confirmOTPReqBody = {\n    otp: otpSha256,\n    txnId: otpTxnId,\n  };\n\n  const confirmOtpHandler = () => {\n    axios\n      .post(\n        \"https://cdn-api.co-vin.in/api/v2/auth/public/confirmOTP\",\n        confirmOTPReqBody\n      )\n      .then((res) => {\n        setOtpToken(String(res.data.token));\n        setAlertCode(\"2\");\n      })\n      .catch((err) => {\n        console.log(err);\n        setAlertCode(\"5\");\n      });\n  };\n\n  const refIdChangeHandler = (e) => {\n    setReferenceId(String(e.target.value));\n  };\n\n  const config = {\n    headers: { Authorization: `Bearer ${otpToken}` },\n    responseType: \"arraybuffer\",\n  };\n\n  const certDownloadHandler = () => {\n    axios\n      .get(\n        `https://cdn-api.co-vin.in/api/v2/registration/certificate/public/download?beneficiary_reference_id=${referenceId}`,\n        config,\n        { responseType: \"blob\" }\n      )\n      .then((res) => {\n        setAlertCode(\"3\");\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n        const fileURL = URL.createObjectURL(file);\n        const link = document.createElement(\"a\");\n        link.href = fileURL;\n        link.download = `${referenceId}`;\n        link.click();\n      })\n      .catch((err) => {\n        console.log(err);\n        setAlertCode(\"6\");\n      });\n  };\n\n  return (\n    <>\n      <AlertBox alertCode={alertCode} mobileNo={mobileNo} />\n      <Card style={{backgroundColor:\"white\",color:\"white\",boxShadow: \"2px 3px 5px #888888\"}} className=\"slideinanimation\">\n        <Card.Header style={{backgroundColor:\"blue\",boxShadow: \"2px 3px 5px #888888\"}}>\n          <b>Download Certificate</b>\n          <OverlayTrigger\n            placement=\"right\"\n            overlay={\n              <Tooltip id={`tooltip-right`} style={{ opacity: \"0.6\" }}>\n                Enter you registered mobile no., verify OTP and download the\n                vaccine certificate.\n              </Tooltip>\n            }\n          >\n            <Button className=\"pt-0\" variant=\"light\">\n              <RiInformationLine />\n            </Button>\n          </OverlayTrigger>\n        </Card.Header>\n        <Card.Body>\n          <MobileNoCard\n            mobileNo={mobileNo}\n            mobileNoChangeHandler={mobileNoChangeHandler}\n            sendOtpHandler={sendOtpHandler}\n          />\n          {otpTxnId !== \"\" && (\n            <OtpBox\n              sentOtp={sentOtp}\n              otpChangeHandler={otpChangeHandler}\n              confirmOtpHandler={confirmOtpHandler}\n            />\n          )}\n          {otpToken && (\n            <RefCard\n              referenceId={referenceId}\n              refIdChangeHandler={refIdChangeHandler}\n              certDownloadHandler={certDownloadHandler}\n            />\n          )}\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default DownloadCert;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport DownloadCert from \"../components/downloadCert\";\n\nconst Certificate = () => {\n  return (\n    <>\n      <Container className=\"mt-3 pt-5\">\n        <Row className=\"mt-5 pt-5\">\n          <Col></Col>\n          <Col xs={5}>\n            <DownloadCert />\n          </Col>\n          <Col></Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default Certificate;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport AppNavbar from \"./commons/appNavbar\";\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport Statistics from './Pages/Statistics';\nimport Welcome from \"./Pages/Welcome\";\nimport Certificate from \"./Pages/Certificate\";\n\n\n\nfunction App() {\n  return (\n    \n    <div style={{ \n      backgroundColor: \"white\",\n      backgroundImage: `url(\"https://pmjay.gov.in/cowin/images/slider/slider-4.png\")`,\n      backgroundPosition: 'center',\n      backgroundSize: 'cover',\n      height:750,\n      width:1500,\n      backgroundRepeat: 'no-repeat',\n  \n  marginTop: 0\n  \n    }}>\n      <AppNavbar />\n      <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Welcome} />\n        <Route exact path=\"/statistics\" component={Statistics} />\n        <Route exact path=\"/certificate\" component={Certificate} />\n      </Switch>\n    </BrowserRouter>\n    </div>\n    \n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}